#!/usr/bin/env ruby

output = File.open('output/6.txt', 'w')

input = File.read('input/6.txt')

input = File.readlines('input/6.txt').map do |line|
  regex = /^(turn on|turn off|toggle) (\d+),(\d+) through (\d+),(\d+)/
  line.match(regex) do |match|
    [match[1].delete(' ').to_sym,
     Range.new(match[2].to_i, match[4].to_i),
     Range.new(match[3].to_i, match[5].to_i)]
  end
end

class Light
  attr_accessor :power

  def initialize
    self.power = false
  end

  def turnon
    self.power = true
  end

  def turnoff
    self.power = false
  end

  def toggle
    self.power = !self.power
  end
end

grid = Array.new(1000) { Array.new(1000) { Light.new } }

input.each do |cmd|
  cmd[1].each do |row|
    cmd[2].each do |col|
      grid[row][col].send(cmd.first)
    end
  end
end

total = grid.flatten.map{|l| l.power}.count(true)

output.write(total)
puts total

class BrightLight
  attr_accessor :power

  def initialize
    self.power = 0
  end

  def turnon
    self.power += 1
  end

  def turnoff
    self.power = [0, self.power - 1].max
  end

  def toggle
    self.power += 2
  end
end

grid = Array.new(1000) { Array.new(1000) { BrightLight.new } }

input.each do |cmd|
  cmd[1].each do |row|
    cmd[2].each do |col|
      grid[row][col].send(cmd.first)
    end
  end
end

total = grid.flatten.map{|l| l.power}.reduce(:+)

output.write("\n#{total}")
puts total

output.close
